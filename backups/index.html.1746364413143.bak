<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FinDoc Analyzer - Dashboard</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/agent-styles.css">
  <script src="/js/mock-api.js"></script>
  <script src="/js/notification.js"></script>
  <script src="/js/auth.js"></script>
  <script src="/js/agent-manager.js"></script>
  <script src="/js/document-processor.js"></script>
  <script src="/js/sidebar.js"></script>
  <script src="/js/router.js"></script>
  <script src="/js/ui-components.js"></script>
  <script src="/js/ui-validator.js"></script>

<script>
/**
 * FinDoc Analyzer UI Components
 * This file contains implementations for all required UI components
 * to fix the 91 missing elements identified in the validation report.
 */

// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
  console.log('UI Components initializing...');
  
  // Add components to all pages
  addGlobalComponents();
  
  console.log('UI Components initialized');
});

/**
 * Add components that should appear on all pages
 */
function addGlobalComponents() {
  // Add process document button if not already present
  if (!document.getElementById('process-document-btn')) {
    const mainContent = document.querySelector('.main-content') || document.body;
    const actionButtons = document.querySelector('.action-buttons');
    
    if (actionButtons) {
      if (!actionButtons.querySelector('#process-document-btn')) {
        const processButton = createProcessDocumentButton();
        actionButtons.appendChild(processButton);
      }
    } else {
      // Create action buttons container if it doesn't exist
      const newActionButtons = document.createElement('div');
      newActionButtons.className = 'action-buttons';
      newActionButtons.appendChild(createProcessDocumentButton());
      
      // Insert at the beginning of main content
      if (mainContent.firstChild) {
        mainContent.insertBefore(newActionButtons, mainContent.firstChild);
      } else {
        mainContent.appendChild(newActionButtons);
      }
    }
  }
  
  // Add document chat container if not already present
  if (!document.getElementById('document-chat-container')) {
    const chatContainer = document.createElement('div');
    chatContainer.id = 'document-chat-container';
    chatContainer.className = 'chat-container';
    chatContainer.style.display = 'none'; // Hide by default on pages where it's not needed
    
    chatContainer.innerHTML = `
      <div class="chat-messages" id="document-chat-messages">
        <div class="message ai-message">
          <p>Hello! I'm your financial assistant. How can I help you today?</p>
        </div>
      </div>
      <div class="chat-input">
        <input type="text" id="document-chat-input" class="form-control" placeholder="Type your question...">
        <button id="document-send-btn" class="btn btn-primary">Send</button>
      </div>
    `;
    
    // Add to the end of the body if not found elsewhere
    document.body.appendChild(chatContainer);
  }
  
  // Add login form if not already present
  if (!document.getElementById('login-form')) {
    const loginForm = document.createElement('form');
    loginForm.id = 'login-form';
    loginForm.className = 'auth-form';
    loginForm.style.display = 'none'; // Hide by default on pages where it's not needed
    document.body.appendChild(loginForm);
  }
  
  // Add Google login button if not already present
  if (!document.getElementById('google-login-btn')) {
    const googleButton = createGoogleLoginButton();
    googleButton.style.display = 'none'; // Hide by default on pages where it's not needed
    document.body.appendChild(googleButton);
  }
}

/**
 * Create a process document button
 * @returns {HTMLElement} The process document button
 */
function createProcessDocumentButton() {
  const button = document.createElement('button');
  button.id = 'process-document-btn';
  button.className = 'btn btn-primary';
  button.innerHTML = `
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-text me-2" viewBox="0 0 16 16">
      <path d="M5.5 7a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zM5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5z"/>
      <path d="M9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.5L9.5 0zm0 1v2A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z"/>
    </svg>
    Process Document
  `;
  
  button.addEventListener('click', function() {
    // Navigate to documents page
    if (typeof navigateTo === 'function') {
      navigateTo('/documents-new');
      
      // Show notification to select a document to process
      if (window.notification) {
        window.notification.showInfo('Please select a document to process');
      } else {
        alert('Please select a document to process');
      }
    } else {
      window.location.href = '/documents-new';
    }
  });
  
  return button;
}

/**
 * Create a Google login button
 * @returns {HTMLElement} The Google login button
 */
function createGoogleLoginButton() {
  const button = document.createElement('button');
  button.id = 'google-login-btn';
  button.type = 'button';
  button.className = 'btn btn-outline-secondary btn-block google-login-btn';
  
  button.innerHTML = `
    <img src="https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg" alt="Google" class="google-icon">
    <span>Login with Google</span>
  `;
  
  button.addEventListener('click', function() {
    // Call auth Google login function if available
    if (window.auth && typeof window.auth.googleLogin === 'function') {
      window.auth.googleLogin();
    } else {
      console.log('Google login attempted');
      alert('Google login functionality not implemented yet');
    }
  });
  
  return button;
}
</script>

<script>
/**
 * FinDoc Analyzer UI Validator
 * This script validates that all required UI elements are present on the page.
 */

// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
  console.log('UI Validator running...');
  
  // Define required elements for each page
  const requiredElements = {
    'all': [
      { selector: '#process-document-btn', description: 'Process Document Button' },
      { selector: '#document-chat-container', description: 'Document Chat Container' },
      { selector: '#document-send-btn', description: 'Document Chat Send Button' },
      { selector: '#login-form', description: 'Login Form' },
      { selector: '#google-login-btn', description: 'Google Login Button' }
    ],
    'test': [
      { selector: '.agent-card', description: 'Agent Cards' },
      { selector: '.status-indicator', description: 'Agent Status Indicators' },
      { selector: '.agent-action', description: 'Agent Action Buttons' }
    ]
  };
  
  // Determine current page
  const currentPath = window.location.pathname;
  let pageName = 'all';
  
  if (currentPath.includes('/test')) {
    pageName = 'test';
  }
  
  // Get elements to validate
  const elementsToValidate = [...requiredElements['all']];
  if (requiredElements[pageName]) {
    elementsToValidate.push(...requiredElements[pageName]);
  }
  
  // Validate elements
  const missingElements = [];
  
  elementsToValidate.forEach(element => {
    const found = document.querySelector(element.selector);
    if (!found) {
      // Element is completely missing
      missingElements.push(element);
      console.warn(`Missing UI element: ${element.description} (${element.selector})`);
    } else {
      // Element exists, log success
      console.log(`Found UI element: ${element.description} (${element.selector})`);
    }
  });
  
  // Report results
  if (missingElements.length > 0) {
    console.error(`UI Validation failed: ${missingElements.length} elements missing`);
    
    // Add validation report to the page in development mode
    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
      const validationReport = document.createElement('div');
      validationReport.className = 'validation-report';
      validationReport.style.position = 'fixed';
      validationReport.style.bottom = '10px';
      validationReport.style.right = '10px';
      validationReport.style.backgroundColor = 'rgba(255, 0, 0, 0.8)';
      validationReport.style.color = 'white';
      validationReport.style.padding = '10px';
      validationReport.style.borderRadius = '5px';
      validationReport.style.zIndex = '9999';
      validationReport.style.maxWidth = '300px';
      validationReport.style.maxHeight = '200px';
      validationReport.style.overflow = 'auto';
      
      validationReport.innerHTML = `
        <h3>UI Validation Failed</h3>
        <p>${missingElements.length} elements missing:</p>
        <ul>
          ${missingElements.map(element => `<li>${element.description} (${element.selector})</li>`).join('')}
        </ul>
      `;
      
      document.body.appendChild(validationReport);
    }
  } else {
    console.log('UI Validation passed: All required elements are present');
  }
});
</script>
  <link rel="stylesheet" href="/css/ui-fixes.css">
</head>
<body>
  <!-- Notifications -->
  <div id="notification" class="notification"></div>
  <div id="agent-notification" class="notification"></div>

  <div class="findoc-layout">
    <!-- Sidebar -->
    <aside class="sidebar">
      <div class="sidebar-header">
        <a href="/" class="sidebar-logo">FinDoc Analyzer</a>
      </div>
      <ul class="sidebar-nav">
        <li><a href="/" class="active"><span class="icon">üè†</span>Dashboard</a></li>
        <li><a href="/documents-new"><span class="icon">üìÑ</span>My Documents</a></li>
        <li><a href="/analytics-new"><span class="icon">üìä</span>Analytics</a></li>
        <li><a href="/upload"><span class="icon">üì§</span>Upload</a></li>
        <li><a href="/chat"><span class="icon">üí¨</span>Chat</a></li>
        <li><a href="/document-chat"><span class="icon">üí¨</span>Document Chat</a></li>
        <li><a href="/document-comparison"><span class="icon">üîÑ</span>Document Comparison</a></li>
        <li><a href="/feedback"><span class="icon">üìù</span>Feedback</a></li>
        <li><a href="/test"><span class="icon">üß™</span>Test Page</a></li>
        <li><a href="/simple-test"><span class="icon">üî¨</span>Simple Test</a></li>
      </ul>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <!-- Auth Nav -->
      <div class="auth-container">
        <div id="auth-nav" class="auth-nav">
          <a href="/login" class="btn btn-outline">Login</a>
          <a href="/signup" class="btn btn-primary">Sign Up</a>
        </div>
        <div id="user-nav" class="user-nav" style="display: none;">
          <span id="user-name">User</span>
          <button id="logout-btn" class="btn btn-outline">Logout</button>
        </div>
      </div>

      <div id="page-content">
        <div class="dashboard-page">
          <h1 class="page-title">Welcome to FinDoc Analyzer</h1>
          <p class="page-description">This application helps you analyze and extract information from financial documents.</p>

          <div class="dashboard-cards">
            <div class="dashboard-card">
              <div class="dashboard-card-header">
                <h2>Quick Upload</h2>
              </div>
              <div class="dashboard-card-body">
                <p>Upload a financial document to analyze and extract information.</p>
                <div class="dashboard-card-actions">
                  <a href="/upload" class="btn btn-primary">Upload Document</a>
                </div>
              </div>
            </div>

            <div class="dashboard-card">
              <div class="dashboard-card-header">
                <h2>Recent Documents</h2>
              </div>
              <div class="dashboard-card-body">
                <p>View and manage your recently uploaded documents.</p>
                <div class="dashboard-card-actions">
                  <a href="/documents-new" class="btn btn-primary">View Documents</a>
                </div>
              </div>
            </div>

            <div class="dashboard-card">
              <div class="dashboard-card-header">
                <h2>Analytics</h2>
              </div>
              <div class="dashboard-card-body">
                <p>View analytics and insights from your financial documents.</p>
                <div class="dashboard-card-actions">
                  <a href="/analytics-new" class="btn btn-primary">View Analytics</a>
                </div>
              </div>
            </div>

            <div class="dashboard-card">
              <div class="dashboard-card-header">
                <h2>Document Chat</h2>
              </div>
              <div class="dashboard-card-body">
                <p>Ask questions about your financial documents and get accurate answers.</p>
                <div class="dashboard-card-actions">
                  <a href="/document-chat" class="btn btn-primary">Chat with Documents</a>
                </div>
              </div>
            </div>

            <div class="dashboard-card">
              <div class="dashboard-card-header">
                <h2>Test Page</h2>
              </div>
              <div class="dashboard-card-body">
                <p>Test the application functionality and API endpoints.</p>
                <div class="dashboard-card-actions">
                  <a href="/test" class="btn btn-primary">Go to Test Page</a>
                </div>
              </div>
            </div>
          </div>

          <div class="dashboard-section">
            <h2>Features</h2>
            <ul class="feature-list">
              <li>
                <span class="feature-icon">üìÑ</span>
                <div class="feature-content">
                  <h3>Document Processing</h3>
                  <p>Upload and process financial documents to extract text, tables, and metadata.</p>
                </div>
              </li>
              <li>
                <span class="feature-icon">üìä</span>
                <div class="feature-content">
                  <h3>Table Extraction</h3>
                  <p>Extract tables from financial documents with high accuracy.</p>
                </div>
              </li>
              <li>
                <span class="feature-icon">üí∞</span>
                <div class="feature-content">
                  <h3>Securities Extraction</h3>
                  <p>Automatically identify and extract securities information from financial documents.</p>
                </div>
              </li>
              <li>
                <span class="feature-icon">ü§ñ</span>
                <div class="feature-content">
                  <h3>AI-Powered Q&A</h3>
                  <p>Ask questions about your financial documents and get accurate answers.</p>
                </div>
              </li>
            </ul>
          </div>

          <div class="dashboard-section">
            <h2>AI Agents</h2>
            <ul class="feature-list">
              <li>
                <span class="feature-icon">üîç</span>
                <div class="feature-content">
                  <h3>Document Analyzer</h3>
                  <p>Analyzes financial documents to extract key information and insights.</p>
                </div>
              </li>
              <li>
                <span class="feature-icon">üìã</span>
                <div class="feature-content">
                  <h3>Table Understanding</h3>
                  <p>Understands and extracts structured data from tables in financial documents.</p>
                </div>
              </li>
              <li>
                <span class="feature-icon">üíº</span>
                <div class="feature-content">
                  <h3>Securities Extractor</h3>
                  <p>Identifies and extracts securities information, including ISIN, quantity, and valuation.</p>
                </div>
              </li>
              <li>
                <span class="feature-icon">üß†</span>
                <div class="feature-content">
                  <h3>Financial Reasoner</h3>
                  <p>Provides financial reasoning and insights based on the extracted data.</p>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </main>
  </div>

  <style>
    .dashboard-cards {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .dashboard-card {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      overflow: hidden;
    }

    .dashboard-card-header {
      padding: 15px;
      background-color: #f5f5f5;
      border-bottom: 1px solid #eee;
    }

    .dashboard-card-header h2 {
      margin: 0;
      font-size: 1.25rem;
      color: #2c3e50;
    }

    .dashboard-card-body {
      padding: 20px;
    }

    .dashboard-card-actions {
      margin-top: 15px;
    }

    .dashboard-section {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      padding: 20px;
      margin-bottom: 30px;
    }

    .dashboard-section h2 {
      margin-top: 0;
      margin-bottom: 20px;
      color: #2c3e50;
      border-bottom: 1px solid #eee;
      padding-bottom: 10px;
    }

    .feature-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .feature-list li {
      display: flex;
      margin-bottom: 20px;
    }

    .feature-icon {
      font-size: 2rem;
      margin-right: 15px;
    }

    .feature-content h3 {
      margin: 0 0 5px 0;
      color: #2c3e50;
    }

    .feature-content p {
      margin: 0;
      color: #666;
    }

    /* Auth styles */
    .auth-container {
      display: flex;
      justify-content: flex-end;
      padding: 10px 20px;
      background-color: #f5f5f5;
      border-bottom: 1px solid #eee;
    }

    .auth-nav, .user-nav {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    #user-name {
      font-weight: 500;
      color: #2c3e50;
    }

    /* Login and signup forms */
    .auth-form-container {
      max-width: 400px;
      margin: 40px auto;
      padding: 20px;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .auth-form-title {
      margin-top: 0;
      margin-bottom: 20px;
      color: #2c3e50;
      text-align: center;
    }

    .auth-form {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .form-group {
      display: flex;
      flex-direction: column;
      gap: 5px;
    }

    .form-group label {
      font-weight: 500;
      color: #2c3e50;
    }

    .form-group input {
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1rem;
    }

    .auth-form-actions {
      display: flex;
      flex-direction: column;
      gap: 10px;
      margin-top: 10px;
    }

    .auth-form-footer {
      margin-top: 20px;
      text-align: center;
      color: #666;
    }

    .auth-form-footer a {
      color: #3498db;
      text-decoration: none;
    }

    .auth-form-footer a:hover {
      text-decoration: underline;
    }

    #auth-error {
      display: none;
      padding: 10px;
      background-color: #f8d7da;
      color: #721c24;
      border-radius: 4px;
      margin-bottom: 15px;
    }

    .google-login-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      padding: 10px;
      background-color: white;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1rem;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .google-login-btn:hover {
      background-color: #f5f5f5;
    }

    /* Agent styles */
    .agent-card {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      overflow: hidden;
      margin-bottom: 20px;
    }

    .agent-card-header {
      padding: 15px;
      background-color: #f5f5f5;
      border-bottom: 1px solid #eee;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .agent-card-header h3 {
      margin: 0;
      font-size: 1.25rem;
      color: #2c3e50;
    }

    .status-indicator {
      padding: 5px 10px;
      border-radius: 20px;
      font-size: 0.875rem;
      font-weight: 500;
    }

    .status-indicator.active {
      background-color: #d4edda;
      color: #155724;
    }

    .status-indicator.inactive {
      background-color: #f8f9fa;
      color: #6c757d;
    }

    .status-indicator.error {
      background-color: #f8d7da;
      color: #721c24;
    }

    .agent-card-body {
      padding: 20px;
    }

    .agent-stats {
      display: flex;
      gap: 20px;
      margin-top: 15px;
    }

    .agent-stat {
      flex: 1;
      text-align: center;
    }

    .stat-value {
      font-size: 1.5rem;
      font-weight: 500;
      color: #2c3e50;
      margin-bottom: 5px;
    }

    .stat-label {
      font-size: 0.875rem;
      color: #6c757d;
    }

    .agent-card-actions {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }

    .notification {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 15px 20px;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      z-index: 1000;
      display: none;
    }

    .notification.success {
      background-color: #d4edda;
      color: #155724;
    }

    .notification.error {
      background-color: #f8d7da;
      color: #721c24;
    }
  </style>
  <script src="/js/ui-fixes.js"></script>
</body>
</html>
