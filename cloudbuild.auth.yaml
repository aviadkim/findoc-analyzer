# Authentication Enhancements Deployment for FinDoc Analyzer
# Simplified deployment that only deploys the main application with auth changes

timeout: 1800s # 30 minutes total build time

substitutions:
  _SERVICE_NAME: findoc-analyzer # Default service name
  _REGION: us-central1 # Default region
  _ENVIRONMENT: dev # Default environment (dev, staging, or production)

options:
  substitutionOption: "ALLOW_LOOSE"
  dynamic_substitutions: true
  machineType: "E2_HIGHCPU_8"
  diskSizeGb: 200

steps:
  # Build the main application container
  - name: "gcr.io/cloud-builders/docker"
    id: "build-main-app"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}-auth:$COMMIT_SHA",
        "-t",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}-auth:latest",
        "-f",
        "Dockerfile",
        ".",
      ]
    timeout: 600s

  # Deploy the main application to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-main-app"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}-auth",
        "--image",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}-auth:$COMMIT_SHA",
        "--platform",
        "managed",
        "--region",
        "${_REGION}",
        "--allow-unauthenticated",
        "--set-env-vars",
        "NODE_ENV=${_ENVIRONMENT},PORT=8081,JWT_SECRET=${_JWT_SECRET}",
        "--memory",
        "2Gi",
        "--cpu",
        "1",
        "--concurrency",
        "80",
        "--max-instances",
        "10",
      ]
    timeout: 300s

  # Run post-deployment verification
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "verify-deployment"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME}-auth --platform managed --region ${_REGION} --format='value(status.url)')
        echo "Verifying deployment at $SERVICE_URL"

        # Wait for service to be available
        for i in {1..30}; do
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $SERVICE_URL/api/health || echo "error")
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "Service is up and running!"
            break
          else
            echo "Service not ready yet (status: $HTTP_STATUS), waiting..."
            sleep 10
          fi

          if [ $i -eq 30 ]; then
            echo "Service did not respond in time"
            exit 1
          fi
        done

        echo "Authentication enhancements deployed and verified successfully!"
    timeout: 300s

# Images to push to Container Registry
images:
  - "gcr.io/$PROJECT_ID/${_SERVICE_NAME}-auth:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/${_SERVICE_NAME}-auth:latest"