# Frontend Dockerfile for FinDoc Analyzer
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the frontend (uncomment/modify as needed for your build process)
# RUN npm run build:frontend

# Production Stage
FROM nginx:alpine

# Copy the built assets from builder stage to nginx
# COPY --from=builder /app/build /usr/share/nginx/html
# For now, we'll use the public directory directly
COPY --from=builder /app/public /usr/share/nginx/html

# Copy custom Nginx configuration
COPY ./nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Add bash for shell scripts
RUN apk add --no-cache bash curl

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost || exit 1

# Create an init script to replace environment variables at runtime
RUN echo '#!/bin/bash \n\
# Replace environment variables in JS files \n\
find /usr/share/nginx/html -type f -name "*.js" -exec sed -i -e "s|BACKEND_API_URL_PLACEHOLDER|${API_URL}|g" {} \; \n\
\n\
# Start Nginx \n\
exec nginx -g "daemon off;" \n\
' > /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh

# Expose HTTP port
EXPOSE 80

# Start Nginx with our custom init script
CMD ["/docker-entrypoint.sh"]