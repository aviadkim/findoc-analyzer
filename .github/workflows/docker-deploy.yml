name: Docker Build and Deploy

on:
  push:
    branches: [ main, docker-deployment ]
  pull_request:
    branches: [ main ]

# Using GitHub secrets for sensitive information
# These secrets must be set in the repository settings
# Go to Settings > Secrets and variables > Actions > New repository secret
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  BACKEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/findoc-backend
  FRONTEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/findoc-frontend
  AGENT_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/findoc-agent
  # Never print or log these values in your workflow

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build backend image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.backend
        push: false
        load: true
        tags: ${{ env.BACKEND_IMAGE }}

    - name: Build frontend image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.frontend
        push: false
        load: true
        tags: ${{ env.FRONTEND_IMAGE }}

    - name: Build agent image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.agent
        push: false
        load: true
        tags: ${{ env.AGENT_IMAGE }}

    - name: Test containers
      run: |
        docker-compose up -d
        sleep 10
        curl -s http://localhost:5000/health || (echo "Backend health check failed" && exit 1)
        docker-compose down

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/docker-deployment')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker

    - name: Build and push backend image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.backend
        push: true
        tags: ${{ env.BACKEND_IMAGE }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.frontend
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}

    - name: Build and push agent image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.agent
        push: true
        tags: ${{ env.AGENT_IMAGE }}

    - name: Create Cloud Storage bucket if it doesn't exist
      run: |
        if ! gsutil ls -b gs://${{ secrets.GCP_PROJECT_ID }}-documents &>/dev/null; then
          gsutil mb -l us-central1 -b on gs://${{ secrets.GCP_PROJECT_ID }}-documents
        fi

    - name: Deploy backend to Cloud Run
      id: deploy-backend
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: findoc-backend
        image: ${{ env.BACKEND_IMAGE }}
        region: us-central1
        flags: --allow-unauthenticated --memory=2Gi --cpu=1 --timeout=300s
        env_vars: GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},STORAGE_BUCKET=${{ secrets.GCP_PROJECT_ID }}-documents

    - name: Deploy agent to Cloud Run
      id: deploy-agent
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: findoc-agent
        image: ${{ env.AGENT_IMAGE }}
        region: us-central1
        flags: --no-allow-unauthenticated --memory=2Gi --cpu=1 --timeout=600s
        env_vars: GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},STORAGE_BUCKET=${{ secrets.GCP_PROJECT_ID }}-documents,BACKEND_URL=${{ steps.deploy-backend.outputs.url }}

    - name: Deploy frontend to Cloud Run
      id: deploy-frontend
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: findoc-frontend
        image: ${{ env.FRONTEND_IMAGE }}
        region: us-central1
        flags: --allow-unauthenticated --memory=1Gi
        env_vars: NEXT_PUBLIC_API_URL=${{ steps.deploy-backend.outputs.url }}

    - name: Configure service-to-service authentication
      run: |
        AGENT_SERVICE_ACCOUNT=$(gcloud run services describe findoc-agent --platform managed --region us-central1 --format 'value(spec.template.spec.serviceAccountName)')
        gcloud run services add-iam-policy-binding findoc-backend \
          --platform managed \
          --region us-central1 \
          --member="serviceAccount:$AGENT_SERVICE_ACCOUNT" \
          --role="roles/run.invoker"

    - name: Summary
      run: |
        echo "Deployment complete!"
        echo "Frontend URL: ${{ steps.deploy-frontend.outputs.url }}"
        echo "Backend URL: ${{ steps.deploy-backend.outputs.url }}"
