name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: findoc-deploy
  SERVICE_NAME: backv2-app
  REGION: me-west1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and push container
      run: |
        # Create a .dockerignore file to exclude unnecessary files
        echo "node_modules" > .dockerignore
        echo ".git" >> .dockerignore
        echo "npm-debug.log" >> .dockerignore

        # Build the Docker image with all necessary files
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        docker tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

        # Push both tags to Google Container Registry
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory=2Gi \
          --cpu=1 \
          --timeout=300s \
          --set-env-vars="NODE_ENV=production,USE_MOCK_API=false,API_URL=https://backv2-app-brfi73d4ra-zf.a.run.app,STORAGE_BUCKET=backv2-documents" \
          --set-secrets="OPENROUTER_API_KEY=openrouter-api-key:latest,GEMINI_API_KEY=gemini-api-key:latest,DEEPSEEK_API_KEY=deepseek-api-key:latest,SUPABASE_KEY=supabase-key:latest,SUPABASE_SERVICE_KEY=supabase-service-key:latest"
